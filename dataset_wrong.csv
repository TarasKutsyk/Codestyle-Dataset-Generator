"id","style","code","label","processed"
"6715963594578028578","Aligned with opening delimiter.","foo = long_function_name(var_one, var_two,
                        var_three, var_four)","wrong","False"

"3213575530546295585","Add 4 spaces (an extra level of indentation) to distinguish arguments from the rest.","def long_function_name(
        var_one, var_two, var_three,
         var_four):","wrong","False"

"4555523396418567934","Hanging indents should add a level.","foo = long_function_name(
var_one, var_two,
var_three, var_four)","wrong","False"

"3731108434884656287","No extra indentation (same level of indent).","if (this_is_one_thing and
that_is_another_thing):","wrong","False"

"-7275606690904798960","Add some extra indentation on the conditional continuation line.","if (this_is_one_thing
     and that_is_another_thing):","wrong","False"

"-5897263164556083888","The closing brace/bracket/parenthesis on multiline constructs must be lined up under the first character of the line that starts the multiline construct","my_list = [
    1, 2, 3,
  4, 5, 6,
]","wrong","False"

"-5897263164556083888","The closing brace/bracket/parenthesis on multiline constructs must be lined up under the first character of the line that starts the multiline construct","result = some_function_that_takes_arguments(
    'a', 'b', 'c',
      'd', 'e', 'f',
)","wrong","False"


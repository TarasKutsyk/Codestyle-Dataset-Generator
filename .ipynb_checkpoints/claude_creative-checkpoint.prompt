You are an expert programmer with extensive experience and vast knowledge of different industries. You will help me create a dataset for correcting a code style according to the PEP 8 Python guideline. The dataset will be in the format "code snippet - correct/wrong label"

You will be given an example of a stylistically correct code snippet, and your task is to generate a total of 10 similar snippets. When generating snippets, you must strictly adhere to the following instructions:

<instructions>

1. Snippets should be identical in the <style_rule>, but not in all <other_aspects>.

2. You will be provided with the <style_rule> description that you must remember to carefully reproduce it in your generated snippets.

3. Your generated samples must be as diverse as possible in all <other_aspects> also provided to you below. 

4. Use all your creativity and industry knowledge to generate examples that are different in <other_aspects> both from the provided example and from each other.

5. Pay special attention to: 

- formatting: in the provided example, a new line of code is indicated with '\n' symbol

- identation: some <style rule>s rely on a specific number of spaces/tabs in each new line of code (starting from '\n' symbol), so you want to keep the identation identical to the one provided in the example.

</instructions>

<style_rule>

Aligned with opening delimiter.

</style_rule>

<other_aspects>

- function/module/variable naming, 

- number of function arguments (i.e. function signature), 

- names of function arguments,

- length & complexity of expressions.

</other_aspects>

<example>

foo = long_function_name(var_one, var_two,\n                         var_three, var_four)

</example>

<output_instruction>

1. By looking at the <example> and <style_rule>, start your output with carefully refining the <style_rule> by generating <refined_rule> block. In this block, try to explain how to follow the <style_rule> step-by-step. Imagine you explaining it to a new employee who has no context on how to use the rule aside from what you explicitly tell them. 

2. Then refine the <other_aspects> you can change in your samples by looking at the <example>, and noticing all the features apart from <style_rule> you can change in this <example>. Wrap this section into <refined_aspects> tags.

3. Finally, paying close attention to the information from the <refined_rule> and <refined_aspects> blocks, generate your samples (only code, without comments). The output result should be in the JSON format:

<output_format>

{

"style_rule": <style_rule>,

"examples": [

    "code_snippet_1",

    "code_snippet_2",

    ...

    "code_snippet_10"

]


}

</output_format>

</output_instruction>
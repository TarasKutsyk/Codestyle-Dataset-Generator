You are an expert programmer with extensive experience and vast knowledge of different industries. You will help me create a dataset for correcting a code style according to the PEP 8 Python guideline. The dataset will be in the format "code snippet - correct/wrong label"

You will be given an example of a stylistically {{correct}} code snippet, and your task is to generate a total of 10 similar snippets. When generating snippets, you must strictly adhere to the following rules:

<rules>

1. Snippets should be identical in the style rule, but not in all other aspects.

2. To understand which style rule you should reproduce, pay special attention to the first comment in the snippet, which should give you an idea of how the generated samples should look.

3. Your generated samples should be identical in the idea, which means they must have the same style rule.

4. Your generated samples must be as different as possible in all other aspects: 

- function/module/variable naming, 

- number of function arguments (i.e. function signature), 

- length of expressions, etc. 

5. Use all your creativity and industry knowledge to generate examples that are different (in other aspects) both from the provided example and from each other.

6. Pay attention to the identation: some style rule**s rely on a specific number of spaces/tabs in each new line of code, so you want to keep **identation identical to the one provided in the example.

</rules>

<example>

# Add some extra indentation on the conditional continuation line. Logical operators should be carried to the next line\nif (this_is_one_thing\n        and that_is_another_thing):

</example>

<output_instruction>

1. Start your output with specifically defining the style rule you inferred from the provided example and the comment, using rules #2, #6. Wrap this section into <style_rule> tag.

2. Then define the other aspects you can change in your samples, using rule #4. Wrap this section into <other_aspects>.

3. Finally, considering all the information from the <style_rule> and <other_aspects> blocks, generate your samples using rules #1, #3 and #5 (only code, without comments). The format should be the following:

<result>

1.

{Your sample #1}

2.

{Your sample #2}

...

10.

{Your sample #10}

<result/>

<output_instruction/>